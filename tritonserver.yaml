apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-servers 
  namespace: bbhnet 
spec:
  replicas: 2
  selector:
    matchLabels:
      app: triton-servers 
  progressDeadlineSeconds: 100
  template:
    metadata:
      labels:
        app: triton-servers 
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: tritonserver
        image: ghcr.io/ethanmarx/triton-hermes:latest
        env:
        - name: EXTRA_NV_PATHS
          value: /usr/local/nvidia/lib64:/usr/local/nvidia/bin
        - name: AWS_ENDPOINT_URL
          value: "http://rook-ceph-rgw-nautiluss3.rook"
        envFrom:
        - secretRef:
            name: aws-credentials
        command:
        - export-and-launch-triton
        resources:
          limits:
            nvidia.com/gpu: 1
            cpu: "1"
            memory: "10G"
          requests:
            nvidia.com/gpu: 1
            cpu: "1"
            memory: "10G"
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8001
          name: grpc
        - containerPort: 8002
          name: metrics
        livenessProbe:
          failureThreshold: 30
          initialDelaySeconds: 360
          periodSeconds: 5
          httpGet:
            path: /v2/health/live
            port: http
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 360
          periodSeconds: 10
          httpGet:
            path: /v2/health/ready
            port: http
        readinessProbe:
          initialDelaySeconds: 360 
          failureThreshold: 30
          periodSeconds: 10
          httpGet:
            path: /v2/health/ready
            port: http
          

---
apiVersion: v1
kind: Service
metadata:
  name: triton-servers
  namespace: bbhnet
spec:
  ports:
  - name: http-triton
    port: 8000
    protocol: TCP
    targetPort: 8000
  - name: grpc-triton
    port: 8001
    protocol: TCP
    targetPort: 8001
  - name: metrics-triton
    port: 8002
    protocol: TCP
    targetPort: 8002
  selector:
    app: triton-servers
  sessionAffinity: ClientIP
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
type: Opaque
stringData:
  aws_access_key_id: 6GXLYAECYYP427N1D6TA
  aws_secret_access_key: IE3t38QwOuWjPQ1I6T4yXH1sp6DzohKwVEAUVWeG
  AWS_ACCESS_KEY_ID: 6GXLYAECYYP427N1D6TA
  AWS_SECRET_ACCESS_KEY: IE3t38QwOuWjPQ1I6T4yXH1sp6DzohKwVEAUVWeG




